# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Deploy previews for PRs to main/staging/develop
'on': pull_request

jobs:
  # prod_preview:
  #   runs-on: ubuntu-latest
  #   if: github.ref != 'refs/heads/main'
  #   steps:
  #     - uses: actions/checkout@v2
  #     - run: npm ci && npm run build --prod
  #     - uses: FirebaseExtended/action-hosting-deploy@v0
  #       with:
  #         repoToken: '${{ secrets.GITHUB_TOKEN }}'
  #         firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_PEZEVENTS }}'
  #         projectId: pezevents
  #       env:
  #         FIREBASE_CLI_PREVIEWS: hostingchannels
  # dev_preview:
  #   runs-on: ubuntu-latest
  #   if: github.ref != 'refs/heads/develop'
  #   steps:
  #     - uses: actions/checkout@v2
  #     - run: npm ci && npm run build
  #     - uses: FirebaseExtended/action-hosting-deploy@v0
  #       with:
  #         repoToken: '${{ secrets.GITHUB_TOKEN }}'
  #         firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_DEV_PEZEVENTS }}'
  #         projectId: dev-pezevents
  #         target: dev-pezevents
  #       env:
  #         FIREBASE_CLI_PREVIEWS: hostingchannels
  # stage_preview:
  #   runs-on: ubuntu-latest
  #   if: github.ref != 'refs/heads/staging'
  #   steps:
  #     - uses: actions/checkout@v2
  #     - run: npm ci && npm run build
  #     - uses: FirebaseExtended/action-hosting-deploy@v0
  #       with:
  #         repoToken: '${{ secrets.GITHUB_TOKEN }}'
  #         firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_STAGE_PEZEVENTS }}'
  #         projectId: stage-pezevents
  #         target: stage-pezevents
  #       env:
  #         FIREBASE_CLI_PREVIEWS: hostingchannels

  print_github_context:
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"

  develop_pr_preview:
    
    runs-on: ubuntu-latest
    if: github.base_ref == 'develop'
    
    steps:
    - uses: actions/checkout@master
    - uses: actions/setup-node@master
      with:
        node-version: '13.x'
    - run: npm ci
    - run: npm run build
    - uses: w9jds/firebase-action@v2.0.0
      with:
        args: hosting:channel:deploy -P dev-pezevents --only dev-pezevents  ${{github.run_id}}-${{github.run_number}}
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_CI_TOKEN }}

  staging_pr_preview:
    
    runs-on: ubuntu-latest
    if: github.base_ref == 'staging'
    
    steps:
    - uses: actions/checkout@master
    - uses: actions/setup-node@master
      with:
        node-version: '13.x'
    - run: npm ci
    - run: npm run build:staging
    - uses: w9jds/firebase-action@v2.0.0
      with:
        args: hosting:channel:deploy -P stage-pezevents --only stage-pezevents  ${{github.run_id}}-${{github.run_number}}
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_CI_TOKEN }}


  main_pr_preview:
    
    runs-on: ubuntu-latest
    if: github.base_ref == 'main'
    
    steps:
    - uses: actions/checkout@master
    - uses: actions/setup-node@master
      with:
        node-version: '13.x'
    - run: npm ci
    - run: npm run build:prod
    - uses: w9jds/firebase-action@v2.0.0
      with:
        args: hosting:channel:deploy -P pezevents --only pezevents  ${{github.run_id}}-${{github.run_number}}
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_CI_TOKEN }}
    
  comment_pr_url:

    runs-on: ubuntu-latest

    steps:
    # Set PROJECT_ID env value
    - name: Set dev projectId
      if: github.base_ref == 'develop'
      env:
        PROJECT_ID: "dev-pezevents"

    - name: Set stage projectId
      if: github.base_ref == 'staging'
      env:
        PROJECT_ID: "stage-pezevents"

    - name: Set main projectId
      if: github.base_ref == 'main'
      env:
        PROJECT_ID: "pezevents"

    - uses: w9jds/firebase-action@v2.0.0
      with:
        args: hosting:channel:list -P ${{env.PROJECT_ID}}
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_CI_TOKEN }}

    - name: Add PR Comment
      uses: mshick/add-pr-comment@v1
      with:
        message: |
          Preview deployment complete:

  print_github_context:
    runs-on: ubuntu-latest
    steps:
      - name: Dump extra values
        env:
          JOB_OUTPUTS: ${{ toJSON(needs.develop_pr_preview.outputs) }}
        run: echo "$JOB_OUTPUTS"