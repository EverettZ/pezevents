# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Deploy to Dev
'on': 
  push:
    branches:
      - develop

jobs:

  # Print github context
  print_github_context:
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"


  # Check filechanges for functions deployment
  check_functions:
    name: Check files
    outputs:
      deploy_functions: ${{ steps.check_files.outputs.deploy_functions }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: check modified files
        id: check_files
        run: |
          echo "=============== list modified files ==============="
          git diff --name-only HEAD^ HEAD
          
          echo "========== check paths of modified files =========="
          git diff --name-only HEAD^ HEAD > files.txt
          while IFS= read -r file
          do
            echo $file
            if [[ $file != functions/* ]]; then
              echo "This modified file is not under the 'functions' folder."
              echo "::set-output name=deploy_functions::false"
              break
            else
              echo "::set-output name=deploy_functions::true"
            fi
          done < files.txt

  job_for_functions:
    name: Job for 'functions' folder
    needs: check_functions
    if: needs.check.outputs.deploy_functions == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: run for 'functions' folder
        run: echo "This job runs only when all the modified files are under the 'functions' folder."

  # Deploy app to development
  # dev.sezzion.com
  dev_deploy:
    runs-on: ubuntu-latest
    needs: check_functions

    if: github.ref == 'develop'

    steps:
    - name: Checkout and setup node
    - uses: actions/checkout@master
    - uses: actions/setup-node@master
      with:
        node-version: '13.x'

    - name: Build app
      run: | 
        npm ci
        npm run build

    - name: Build functions
      if: needs.check_functions.outputs.deploy_functions == 'true'
      run: |
        cd ./functions
        npm ci
        npm run build
        cd ..

    - name: Deploy hosting
      uses: w9jds/firebase-action@master
      with:
        args: deploy -P dev-pezevents --only hosting:dev-pezevents 
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_CI_TOKEN }}

    - name: Deploy functions
      if: needs.check_functions.outputs.deploy_functions == 'true'
      uses: w9jds/firebase-action@master
      with:
        args: deploy -P dev-pezevents --only functions
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_CI_TOKEN }}

  # Deploy app to staging
  # stage.sezzion.com
  staging_deploy:
    runs-on: ubuntu-latest
    needs: check_functions

    if: github.ref == 'staging'

    steps:
    - name: Checkout and setup node
    - uses: actions/checkout@master
    - uses: actions/setup-node@master
      with:
        node-version: '13.x'

    - name: Build app
      run: |
        npm ci
        npm run build

    - name: Build functions
      if: needs.check_functions.outputs.deploy_functions == 'true'
      run: |
        cd ./functions
        npm ci
        npm run build
        cd ..

    - name: Deploy hosting
      uses: w9jds/firebase-action@master
      with:
        args: deploy -P stage-pezevents --only hosting:stage-pezevents 
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_CI_TOKEN }}

    - name: Deploy functions
      if: needs.check_functions.outputs.deploy_functions == 'true'
      uses: w9jds/firebase-action@master
      with:
        args: deploy -P stage-pezevents --only functions
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_CI_TOKEN }}

  # Deploy app to production. 
  # sezzion.com
  prod_deploy:
    runs-on: ubuntu-latest
    needs: check_functions

    if: github.ref == 'main'

    steps:
    - name: Checkout and setup node
    - uses: actions/checkout@v2
    - uses: actions/setup-node@master
      with:
        node-version: '13.x'

    - name: Build and deploy app
      run: npm ci && npm run build --prod
    
    - name: Deploy prod app
      uses: FirebaseExtended/action-hosting-deploy@v0
      with:
        repoToken: '${{ secrets.GITHUB_TOKEN }}'
        firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_PEZEVENTS }}'
        channelId: live
        projectId: pezevents
        target: pezevents
      env:
        FIREBASE_CLI_PREVIEWS: hostingchannels

    - name: Build and deploy functions
      if: needs.check_functions.outputs.deploy_functions == 'true'
      working-directory: ./functions
      run: npm ci && npm run build

    - name: Deploy functions
      if: needs.check_functions.outputs.deploy_functions == 'true'
    - uses: w9jds/firebase-action@master
      with:
        args: deploy -P stage-pezevents --only functions
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_CI_TOKEN }}
