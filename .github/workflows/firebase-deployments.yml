# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Deploy to Dev
"on":
  push:
    branches:
      - develop
      - staging
      - main

jobs:
  # Print github context
  print_github_context:
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"

  # Check filechanges for functions deployment
  check_functions:
    name: Check files
    outputs:
      deploy_functions: ${{ steps.check_files.outputs.deploy_functions }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: check modified files
        id: check_files
        run: |
          echo "=============== list modified files ==============="
          git diff --name-only HEAD^ HEAD

          echo "========== check paths of modified files =========="
          git diff --name-only HEAD^ HEAD > files.txt
          while IFS= read -r file
          do
            echo $file
            if [[ $file != functions/* ]]; then
              echo "This modified file is not under the 'functions' folder."
              echo "::set-output name=deploy_functions::false"
              break
            else
              echo "::set-output name=deploy_functions::true"
            fi
          done < files.txt

  check_env:
    name: Check files
    outputs:
      app_id: ${{ steps.check_env.outputs.app_id }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Set dev app id
        if: github.ref == 'develop'
        id: app_id_develop
        run: |
          echo "This is a PR into the develop branch. Using dev-pezevents."
          echo "::set-output name=app_id::dev-pezevents"

      - name: Set stage app id
        if: github.ref == 'staging'
        id: app_id_stage
        run: |
          echo "This is a PR into the develop branch. Using stage-pezevents."
          echo "::set-output name=app_id::stage-pezevents"

      - name: Set prod app id
        if: github.ref == 'main'
        id: app_id_main
        run: |
          echo "This is a PR into the develop branch. Using pezevents."
          echo "::set-output name=app_id::pezevents"

  job_for_functions:
    name: Job for 'functions' folder
    needs: check_functions
    if: needs.check_functions.outputs.deploy_functions == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: run for 'functions' folder
        run: echo "This job runs only when all the modified files are under the 'functions' folder."

  # Deploy app to development
  # dev.sezzion.com
  deploy:
    runs-on: ubuntu-latest
    needs: [check_functions, check_env]
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-node@master
        with:
          node-version: "13.x"

      - name: Build app dev
        if: needs.check_env.outputs.app_id == 'dev-pezevents'
        run: |
          npm ci
          npm run build

      - name: Build app dev
        if: needs.check_env.outputs.app_id == 'stage-pezevents'
        run: |
          npm ci
          npm run build:staging

      - name: Build app dev
        if: needs.check_env.outputs.app_id == 'pezevents'
        run: |
          npm ci
          npm run build:prod

      - name: Build functions
        if: needs.check_functions.outputs.deploy_functions == 'true'
        working-directory: ./functions
        run: |
          npm ci
          npm run build

      - name: Deploy functions
        if: needs.check_functions.outputs.deploy_functions == 'true'
        uses: w9jds/firebase-action@master
        with:
          args: deploy -P dev-pezevents --only functions
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_CI_TOKEN }}

      - name: Deploy dev or stage
        if: needs.check_env.outputs.app_id == 'dev-pezevents' || needs.check_env.outputs.app_id == 'stage-pezevents'
        uses: w9jds/firebase-action@master
        with:
          args: deploy -P ${{needs.check_env.outputs.app_id}} --only hosting:${{needs.check_env.outputs.app_id}}
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_CI_TOKEN }}

      - name: Deploy prod
        if: needs.check_env.outputs.app_id == 'pezevents'
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_PEZEVENTS }}"
          channelId: live
          projectId: pezevents
          target: pezevents
        env:
          FIREBASE_CLI_PREVIEWS: hostingchannels
